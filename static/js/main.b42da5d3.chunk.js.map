{"version":3,"sources":["select/select.models.ts","select/components/caret/caret.styles.ts","select/components/caret/caret.component.tsx","select/components/content/content.styles.ts","select/components/content/content.component.tsx","select/components/option/option.styles.ts","select/components/option/option.component.tsx","select/components/dropdown/dropdown.styles.ts","select/components/dropdown/dropdown.component.tsx","select/select.styles.ts","select/select.component.tsx","global-styles.ts","app.tsx","index.tsx"],"names":["CONSTANTS","Styled","Caret","styled","svg","$dropdownIsOpen","css","dropdownIsOpen","viewBox","width","height","d","Content","span","Pill","DeleteButton","button","Placeholder","options","value","handlePillClick","placeholder","content","useMemo","find","option","label","Array","isArray","map","selectedValue","data-value","onClick","x1","y1","x2","y2","stroke","strokeWidth","Option","$isSelected","$isRtl","style","isSelected","isDisabled","isRtl","children","type","disabled","openAnimation","keyframes","closeAnimation","Wrapper","div","$isOpen","$dropdownPosition","shift","Dropdown","SearchField","input","Options","EmptyOptionsText","isOpen","handleOptionClick","selectClientRect","isSearchable","searchFieldPlaceholder","emptyOptionsText","useState","needRender","setNeedRender","searchString","setSearchString","useEffect","animationEndHandler","useCallback","handleChangeSearch","event","target","searchInputRef","useRef","filteredOptions","filter","clearOptionLabel","trim","toLowerCase","clearSearchString","toLocaleLowerCase","includes","setTimeout","current","focus","dropdownPosition","dropdownHeight","bottom","window","innerHeight","top","noItemsMessageIsShow","length","virtualListHeight","getOptionIsSelected","currentOptionValue","onAnimationEnd","aria-expanded","onChange","autoComplete","ref","role","transition","scrollToIndex","findIndex","scrollToAlignment","rowCount","rowHeight","rowRenderer","index","key","Select","$isReadOnly","id","name","mode","onBlur","fillingIsCorrected","isReadOnly","selectWrapperRef","selectRef","setDropdownOpen","multiValuesRef","handleEscapePress","handleClickOutside","contains","document","addEventListener","removeEventListener","handleOpen","prevState","newMultiValues","newValue","currentTarget","getAttribute","undefined","_value","data-name","aria-invalid","getBoundingClientRect","GlobalStyles","createGlobalStyle","getFillingIsCorrected","touched","errors","get","App","useForm","criteriaMode","shouldUnregister","control","handleSubmit","formState","sendData","formData","console","log","optionsForSingle","from","_","i","Math","random","optionsForMulti","onSubmit","cols","rows","rules","required","message","render","field","touchedFields","getElementById"],"mappings":"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","file":"static/js/main.b42da5d3.chunk.js","sourcesContent":["export const CONSTANTS = {\n  selectHeight: 40,\n  dropdownHeight: 200,\n  dropdownGap: 8,\n  optionHeight: 40,\n  minOptionsLengthForSearchable: 5,\n  animationDurationMs: 250,\n};","import styled, { css } from 'styled-components';\n\nimport { CONSTANTS } from '../../select.models';\n\nconst Caret = styled.svg<{ $dropdownIsOpen: boolean }>(({ $dropdownIsOpen }) => css`\n  margin-left: auto;\n\n  transform: rotate(${!$dropdownIsOpen ? '0deg' : '180deg'});\n\n  transition: transform ${CONSTANTS.animationDurationMs}ms;\n`);\n\nconst Styled = { Caret };\n\nexport default Styled;","import type { FC } from 'react';\n\nimport Styled from './caret.styles';\nimport type { CaretProps } from './caret.types';\n\nconst Caret: FC<CaretProps> = ({ dropdownIsOpen }) => (\n  <Styled.Caret\n    viewBox=\"8 8 16 16\"\n    width=\"1rem\"\n    height=\"1rem\"\n    $dropdownIsOpen={dropdownIsOpen}\n  >\n    <path d=\"M16.003 18.626l7.081-7.081L25 13.46l-8.997 8.998-9.003-9 1.917-1.916z\" />\n  </Styled.Caret>\n);\n\nexport default Caret;","import styled from 'styled-components';\n\nconst Content = styled.span``;\n\nconst Pill = styled.span`\n  padding: 0.25rem;\n\n  border-radius: 0.25rem;\n  \n  background-color: #4a99d5;\n  color: #fff;\n  \n  &:not(:last-child) {\n    margin-right: 1rem;\n  }\n`;\n\nconst DeleteButton = styled.button`\n  margin-left: 0.5rem;\n  padding: 0.25rem;\n  \n  border: none;\n  background: none;\n  \n  color: #fff;\n`;\n\nconst Placeholder = styled.span`\n  color: #656565;\n`;\n\nconst Styled = { Content, Pill, DeleteButton, Placeholder };\n\nexport default Styled;","import { FC, useMemo } from 'react';\n\nimport Styled from './content.styles';\nimport type { ContentProps } from './content.types';\n\nconst Content: FC<ContentProps> = ({ options, value, handlePillClick, placeholder }) => {\n  const content = useMemo(\n    () => {\n      if (typeof value === 'string') {\n        return options.find((option) => option.value === value)?.label;\n      }\n\n      if (Array.isArray(value)) {\n        return value.map((selectedValue) => {\n          return options.find((option) => option.value === selectedValue);\n        }).map((option) => (\n          <Styled.Pill\n            key={option?.value as string}\n          >\n            {option?.label}\n\n            <Styled.DeleteButton\n              data-value={option?.value as string}\n              onClick={handlePillClick}\n            >\n              <svg viewBox=\"0 0 12 12\" width=\"12\" height=\"12\">\n                <line x1=\"1\" y1=\"11\"\n                      x2=\"11\" y2=\"1\"\n                      stroke=\"#fff\"\n                      strokeWidth=\"2\" />\n                <line x1=\"1\" y1=\"1\"\n                      x2=\"11\" y2=\"11\"\n                      stroke=\"#fff\"\n                      strokeWidth=\"2\" />\n              </svg>\n            </Styled.DeleteButton>\n          </Styled.Pill>\n        ));\n      }\n    },\n    [options, value],\n  );\n\n  return content ? (\n    <Styled.Content>{content}</Styled.Content>\n  ) : (\n    <Styled.Placeholder>{placeholder}</Styled.Placeholder>\n  );\n};\n\nexport default Content;","import styled, { css } from 'styled-components';\n\nimport { CONSTANTS } from '../../select.models';\n\nconst Option = styled.button<{ $isSelected: boolean; $isRtl: boolean }>(({ $isSelected, $isRtl }) => css`\n  display: block;\n\n  width: 100%;\n  height: ${CONSTANTS.optionHeight}px;\n\n  padding: 0.5rem;\n\n  border: none;\n  background-color: ${!$isSelected ? '#fff' : '#4a99d5'};\n\n  text-align: ${!$isRtl ? 'left' : 'right'};\n  color: ${!$isSelected ? '#000' : '#fff'};\n\n  user-select: none;\n  appearance: none;\n  cursor: pointer;\n  transition: background-color 0.25s, color 0.25s;\n\n  &:hover {\n    background-color: #4a99d5;\n    color: #fff;\n  }\n\n  &:not(:last-child) {\n    border-bottom: 1px solid #444;\n  }\n\n  &[disabled] {\n    background-color: #919191;\n    color: #000;\n    cursor: not-allowed;\n  }\n`);\n\nconst Styled = { Option };\n\nexport default Styled;","import { FC } from 'react';\n\nimport Styled from './option.styles';\nimport type { OptionProps } from './option.types';\n\nconst Option: FC<OptionProps> = ({\n                                   value,\n                                   onClick,\n                                   style,\n                                   isSelected,\n  isDisabled,\n                                   isRtl,\n                                   children,\n                                 }) => {\n  return <Styled.Option\n    type=\"button\"\n    data-value={value}\n    onClick={onClick}\n    style={style}\n    disabled={isDisabled}\n    $isSelected={isSelected}\n    $isRtl={isRtl}\n  >\n    {children}\n  </Styled.Option>;\n};\n\nexport default Option;","import styled, { css, keyframes } from 'styled-components';\n\nimport { CONSTANTS } from '../../select.models';\n\nconst openAnimation = keyframes`\n  from {\n    max-height: 0;\n  }\n\n  to {\n    max-height: ${CONSTANTS.dropdownHeight}px;\n  }\n`;\n\nconst closeAnimation = keyframes`\n  from {\n    max-height: ${CONSTANTS.dropdownHeight}px;\n  }\n\n  to {\n    max-height: 0;\n  }\n`;\n\nconst Wrapper = styled.div<{ $isOpen: boolean, $dropdownPosition: 'top' | 'bottom', }>(({\n                                                                                          $isOpen,\n                                                                                          $dropdownPosition,\n                                                                                        }) => {\n  const shift = CONSTANTS.selectHeight + CONSTANTS.dropdownGap;\n\n  return css`\n    position: absolute;\n    ${$dropdownPosition === 'top' ? `bottom: ${shift}px` : `top: ${shift}px`};\n\n    left: 0;\n    right: 0;\n    z-index: 10;\n\n    animation: ${$isOpen ? openAnimation : closeAnimation} ${CONSTANTS.animationDurationMs}ms;\n\n    overflow: hidden;\n\n    transition: ${CONSTANTS.animationDurationMs}ms;\n  `;\n});\n\nconst Dropdown = styled.div`\n  border: 1px solid #444;\n  background-color: #fff;\n`;\n\nconst SearchField = styled.input`\n  width: 100%;\n  height: ${CONSTANTS.optionHeight}px;\n\n  padding: 0 0.5rem;\n\n  border: none;\n  border-bottom: 1px solid #444;\n`;\n\nconst Options = styled.div``;\n\nconst EmptyOptionsText = styled.div`\n  padding: 0.5rem;\n\n  text-align: center;\n  color: #888;\n\n  user-select: none;\n`;\n\nconst Styled = { Wrapper, Dropdown, SearchField, Options, EmptyOptionsText };\n\nexport default Styled;","import { ChangeEvent, FC, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { AutoSizer, Dimensions, List } from 'react-virtualized';\n\nimport Option from '../option';\n\nimport { CONSTANTS } from '../../select.models';\n\nimport Styled from './dropdown.styles';\nimport type { DropdownProps } from './dropdown.types';\n\nconst Dropdown: FC<DropdownProps> = ({\n                                       isOpen,\n                                       options,\n                                       value,\n                                       handleOptionClick,\n                                       selectClientRect,\n                                       isSearchable,\n                                       searchFieldPlaceholder,\n                                       emptyOptionsText,\n                                       isRtl,\n                                     }) => {\n  const [needRender, setNeedRender] = useState(isOpen);\n  const [searchString, setSearchString] = useState('');\n\n  useEffect(() => {\n    if (isOpen) {\n      setNeedRender(true);\n    }\n  }, [isOpen]);\n\n  const animationEndHandler = useCallback(() => {\n    if (!isOpen) {\n      if (searchString) {\n        setSearchString('');\n      }\n\n      setNeedRender(false);\n    }\n  }, [isOpen, searchString]);\n\n  const handleChangeSearch = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    setSearchString(event.target.value);\n  }, []);\n\n  const searchInputRef = useRef<HTMLInputElement>(null);\n\n  const filteredOptions = useMemo(() => {\n    if (!searchString) return options;\n\n    return options.filter((option) => {\n      const clearOptionLabel = `${option.label}`.trim().toLowerCase();\n      const clearSearchString = searchString.trim().toLocaleLowerCase();\n\n      return clearOptionLabel.includes(clearSearchString);\n    });\n  }, [options, searchString]);\n\n  useEffect(() => {\n    if (needRender) {\n      setTimeout(() => {\n        if (searchInputRef.current) {\n          searchInputRef.current.focus();\n        }\n      }, CONSTANTS.animationDurationMs);\n    }\n  }, [needRender, searchInputRef]);\n\n  const dropdownPosition = useMemo(() => {\n    const dropdownHeight = selectClientRect.bottom + CONSTANTS.dropdownHeight;\n\n    if (dropdownHeight > window.innerHeight && dropdownHeight > selectClientRect.top) {\n      return 'top';\n    }\n\n    return 'bottom';\n  }, [selectClientRect]);\n\n  const noItemsMessageIsShow = useMemo(() => {\n    return options.length === 0 || (searchString.length !== 0 && filteredOptions.length === 0);\n  }, [options, searchString, filteredOptions]);\n\n  const virtualListHeight = useMemo(() => {\n    return filteredOptions.length > CONSTANTS.minOptionsLengthForSearchable\n      ? `${CONSTANTS.dropdownHeight}px`\n      : `${filteredOptions.length * CONSTANTS.optionHeight}px`;\n  }, [filteredOptions]);\n\n  const getOptionIsSelected = useCallback((currentOptionValue) => {\n    if (typeof value === 'string') {\n      return value === currentOptionValue;\n    }\n\n    if (Array.isArray(value)) {\n      return value.includes(currentOptionValue)\n    }\n\n    return false;\n  }, [value]);\n\n  return needRender ? (\n    <Styled.Wrapper\n      $isOpen={isOpen}\n      onAnimationEnd={animationEndHandler}\n      $dropdownPosition={dropdownPosition}\n    >\n      <Styled.Dropdown\n        aria-expanded=\"true\"\n      >\n        {options.length >= CONSTANTS.minOptionsLengthForSearchable && isSearchable && (\n          <Styled.SearchField\n            type=\"text\"\n            value={searchString}\n            onChange={handleChangeSearch}\n            placeholder={searchFieldPlaceholder}\n            autoComplete=\"off\"\n            ref={searchInputRef}\n          />\n        )}\n\n        <Styled.Options\n          role=\"list\"\n        >\n          {noItemsMessageIsShow && (\n            <Styled.EmptyOptionsText>{emptyOptionsText}</Styled.EmptyOptionsText>\n          )}\n\n          {options.length >= CONSTANTS.minOptionsLengthForSearchable ? (\n            <AutoSizer\n              style={{\n                height: virtualListHeight,\n                transition: `height ${CONSTANTS.animationDurationMs}ms`,\n              }}\n            >\n              {({ width, height }: Dimensions) => (\n                <List\n                  scrollToIndex={\n                    value\n                      ? filteredOptions.findIndex((option) => option.value === value)\n                      : 0\n                  }\n                  height={height}\n                  width={width}\n                  scrollToAlignment=\"start\"\n                  rowCount={filteredOptions.length}\n                  rowHeight={CONSTANTS.optionHeight}\n                  rowRenderer={({ index, style, key }) => (\n                    <Option\n                      key={key}\n                      value={filteredOptions[index].value}\n                      onClick={handleOptionClick}\n                      isSelected={getOptionIsSelected(filteredOptions[index].value)}\n                      isDisabled={filteredOptions[index].isDisabled}\n                      isRtl={isRtl}\n                      style={style}\n                    >\n                      {filteredOptions[index].label}\n                    </Option>\n                  )}\n                  style={{\n                    height: `${filteredOptions.length !== 0 ? CONSTANTS.dropdownHeight : 0}px`,\n                  }}\n                />\n              )}\n            </AutoSizer>\n          ) : options.map((option) => (\n            <Option\n              key={option.value}\n              value={option.value}\n              onClick={handleOptionClick}\n              isSelected={getOptionIsSelected(option.value)}\n              isDisabled={option.isDisabled}\n              isRtl={isRtl}\n            >\n              {option.label}\n            </Option>\n          ))}\n        </Styled.Options>\n\n      </Styled.Dropdown>\n    </Styled.Wrapper>\n  ) : null;\n};\n\nexport default Dropdown;","import styled, { css } from 'styled-components';\n\nimport { CONSTANTS } from './select.models';\n\nconst Wrapper = styled.div`\n  position: relative;\n\n  font-family: sans-serif;\n`;\n\nconst Select = styled.div<{\n  $isReadOnly: boolean;\n  $isRtl: boolean;\n}>(({ $isReadOnly, $isRtl }) => css`\n  display: flex;\n  align-items: center;\n  justify-content: ${!$isRtl ? 'flex-start' : 'flex-end'};\n\n  width: 100%;\n  height: ${CONSTANTS.selectHeight}px;\n\n  padding: 0.5rem;\n\n  border: 1px solid ${!$isReadOnly ? '#444' : '#ccc'};\n\n  background-color: ${!$isReadOnly ? '#fff' : '#ccc'};\n\n  text-align: ${!$isRtl ? 'left' : 'right'};\n\n  appearance: none;\n  cursor: ${!$isReadOnly ? 'pointer' : 'not-allowed'};\n  transition: border-color ${CONSTANTS.animationDurationMs}ms;\n\n  &[aria-invalid=\"true\"] {\n    border-color: red;\n  }\n\n  &[aria-invalid=\"false\"] {\n    border-color: green;\n  }\n`);\n\nconst Styled = {\n  Wrapper,\n  Select,\n};\n\nexport default Styled;","import { FC, MouseEvent, useCallback, useEffect, useRef, useState } from 'react';\n\nimport { Caret, Content, Dropdown } from './components';\n\nimport Styled from './select.styles';\nimport type { SelectProps } from './select.types';\n\nconst Select: FC<SelectProps> = ({\n                                   id,\n                                   name,\n\n                                   mode = 'single',\n                                   value,\n                                   options = [],\n                                   onChange,\n                                   onBlur,\n\n                                   placeholder = 'Please, select',\n\n                                   fillingIsCorrected,\n\n                                   isReadOnly = false,\n\n                                   isSearchable = false,\n                                   searchFieldPlaceholder = 'Please, type a search string',\n                                   emptyOptionsText = 'No options',\n\n                                   isRtl = false,\n                                 }) => {\n  const selectWrapperRef = useRef<HTMLDivElement>(null);\n  const selectRef = useRef<HTMLDivElement>(null);\n  const [dropdownIsOpen, setDropdownOpen] = useState(false);\n  const multiValuesRef = useRef<string[]>([]);\n\n  // Close dropdown on  Escape press and outside click\n  useEffect(() => {\n    const handleEscapePress = (event: KeyboardEvent) => {\n      if (event.key === 'Escape') {\n        setDropdownOpen(false);\n      }\n    };\n\n    const handleClickOutside = (event: Event) => {\n      if (selectWrapperRef.current && !selectWrapperRef.current.contains(event.target as Node)) {\n        setDropdownOpen(false);\n      }\n    };\n\n    document.addEventListener('keydown', handleEscapePress, true);\n    document.addEventListener('click', handleClickOutside, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleEscapePress, true);\n      document.removeEventListener('click', handleClickOutside, true);\n    };\n  }, [selectWrapperRef]);\n\n  const handleOpen = useCallback(() => {\n    !isReadOnly && setDropdownOpen((prevState) => !prevState);\n  }, [isReadOnly]);\n\n  const handleOptionClick = useCallback((event: MouseEvent<HTMLButtonElement>) => {\n    onBlur();\n\n    const newValue = event.currentTarget.getAttribute('data-value') as string;\n\n    if (mode === 'single') {\n      if (newValue !== value) {\n        onChange(newValue);\n      } else {\n        onChange(undefined);\n      }\n\n      setDropdownOpen(false);\n    }\n\n    if (mode === 'multi') {\n      let newMultiValues: string[];\n\n      if (multiValuesRef.current.includes(newValue)) {\n        newMultiValues = multiValuesRef.current.filter((_value) => _value !== newValue);\n      } else {\n        newMultiValues = [...multiValuesRef.current, newValue];\n      }\n\n      multiValuesRef.current = newMultiValues;\n\n      onChange(newMultiValues);\n    }\n  }, [value]);\n\n  return (\n    <Styled.Wrapper\n      ref={selectWrapperRef}\n    >\n      <Styled.Select\n        id={id}\n        role=\"button\"\n        ref={selectRef}\n        data-name={name}\n        onClick={handleOpen}\n        aria-invalid={typeof fillingIsCorrected === 'boolean' ? !fillingIsCorrected : undefined}\n        $isReadOnly={isReadOnly}\n        $isRtl={isRtl}\n      >\n        <Content options={options} value={value} handlePillClick={handleOptionClick} placeholder={placeholder} />\n\n        <Caret dropdownIsOpen={dropdownIsOpen} />\n      </Styled.Select>\n\n      {selectRef.current && (\n        <Dropdown\n          isOpen={dropdownIsOpen}\n          options={options}\n          value={value}\n          handleOptionClick={handleOptionClick}\n          selectClientRect={selectRef.current.getBoundingClientRect()}\n          isSearchable={isSearchable}\n          searchFieldPlaceholder={searchFieldPlaceholder}\n          emptyOptionsText={emptyOptionsText}\n          isRtl={isRtl}\n        />\n      )}\n    </Styled.Wrapper>\n  );\n};\n\nexport default Select;","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyles = createGlobalStyle`\n  *,\n  *:before,\n  *:after {\n    box-sizing: border-box;\n  }\n\n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed,\n  figure, figcaption, footer, header, hgroup,\n  menu, nav, output, ruby, section, summary,\n  time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n  }\n\n  /* make sure to set some focus styles for accessibility */\n  :focus {\n    outline: 0;\n  }\n\n  /* HTML5 display-role reset for older browsers */\n  article, aside, details, figcaption, figure,\n  footer, header, hgroup, menu, nav, section {\n    display: block;\n  }\n\n  body {\n    line-height: 1;\n  }\n\n  ol, ul {\n    list-style: none;\n  }\n\n  blockquote, q {\n    quotes: none;\n  }\n\n  blockquote:before, blockquote:after,\n  q:before, q:after {\n    content: '';\n    content: none;\n  }\n\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n\n  input[type=search]::-webkit-search-cancel-button,\n  input[type=search]::-webkit-search-decoration,\n  input[type=search]::-webkit-search-results-button,\n  input[type=search]::-webkit-search-results-decoration {\n    -webkit-appearance: none;\n    -moz-appearance: none;\n  }\n\n  input[type=search] {\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    -webkit-box-sizing: content-box;\n    -moz-box-sizing: content-box;\n    box-sizing: content-box;\n  }\n\n  textarea {\n    overflow: auto;\n    vertical-align: top;\n    resize: vertical;\n  }\n\n  /**\n   * Correct \\`inline-block\\` display not defined in IE 6/7/8/9 and Firefox 3.\n   */\n\n  audio,\n  canvas,\n  video {\n    display: inline-block;\n    display: inline;\n    zoom: 1;\n    max-width: 100%;\n  }\n\n  /**\n   * Prevent modern browsers from displaying \\`audio\\` without controls.\n   * Remove excess height in iOS 5 devices.\n   */\n\n  audio:not([controls]) {\n    display: none;\n    height: 0;\n  }\n\n  /**\n   * Address styling not present in IE 7/8/9, Firefox 3, and Safari 4.\n   * Known issue: no IE 6 support.\n   */\n\n  [hidden] {\n    display: none;\n  }\n\n  /**\n   * 1. Correct text resizing oddly in IE 6/7 when body \\`font-size\\` is set using\n   *    \\`em\\` units.\n   * 2. Prevent iOS text size adjust after orientation change, without disabling\n   *    user zoom.\n   */\n\n  html {\n    font-size: 100%; /* 1 */\n    -webkit-text-size-adjust: 100%; /* 2 */\n    -ms-text-size-adjust: 100%; /* 2 */\n  }\n\n  /**\n   * Address \\`outline\\` inconsistency between Chrome and other browsers.\n   */\n\n  a:focus {\n    outline: thin dotted;\n  }\n\n  /**\n   * Improve readability when focused and also mouse hovered in all browsers.\n   */\n\n  a:active,\n  a:hover {\n    outline: 0;\n  }\n\n  /**\n   * 1. Remove border when inside \\`a\\` element in IE 6/7/8/9 and Firefox 3.\n   * 2. Improve image quality when scaled in IE 7.\n   */\n\n  img {\n    border: 0; /* 1 */\n    -ms-interpolation-mode: bicubic; /* 2 */\n  }\n\n  /**\n   * Address margin not present in IE 6/7/8/9, Safari 5, and Opera 11.\n   */\n\n  figure {\n    margin: 0;\n  }\n\n  /**\n   * Correct margin displayed oddly in IE 6/7.\n   */\n\n  form {\n    margin: 0;\n  }\n\n  /**\n   * Define consistent border, margin, and padding.\n   */\n\n  fieldset {\n    border: 1px solid #c0c0c0;\n    margin: 0 2px;\n    padding: 0.35em 0.625em 0.75em;\n  }\n\n  /**\n   * 1. Correct color not being inherited in IE 6/7/8/9.\n   * 2. Correct text not wrapping in Firefox 3.\n   * 3. Correct alignment displayed oddly in IE 6/7.\n   */\n\n  legend {\n    border: 0; /* 1 */\n    padding: 0;\n    white-space: normal; /* 2 */\n    margin-left: -7px; /* 3 */\n  }\n\n  /**\n   * 1. Correct font size not being inherited in all browsers.\n   * 2. Address margins set differently in IE 6/7, Firefox 3+, Safari 5,\n   *    and Chrome.\n   * 3. Improve appearance and consistency in all browsers.\n   */\n\n  button,\n  input,\n  select,\n  textarea {\n    font-size: 100%; /* 1 */\n    margin: 0; /* 2 */\n    vertical-align: baseline; /* 3 */\n    vertical-align: middle; /* 3 */\n  }\n\n  /**\n   * Address Firefox 3+ setting \\`line-height\\` on \\`input\\` using \\`!important\\` in\n   * the UA stylesheet.\n   */\n\n  button,\n  input {\n    line-height: normal;\n  }\n\n  /**\n   * Address inconsistent \\`text-transform\\` inheritance for \\`button\\` and \\`select\\`.\n   * All other form control elements do not inherit \\`text-transform\\` values.\n   * Correct \\`button\\` style inheritance in Chrome, Safari 5+, and IE 6+.\n   * Correct \\`select\\` style inheritance in Firefox 4+ and Opera.\n   */\n\n  button,\n  select {\n    text-transform: none;\n  }\n\n  /**\n   * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native \\`audio\\`\n   *    and \\`video\\` controls.\n   * 2. Correct inability to style clickable \\`input\\` types in iOS.\n   * 3. Improve usability and consistency of cursor style between image-type\n   *    \\`input\\` and others.\n   * 4. Remove inner spacing in IE 7 without affecting normal text inputs.\n   *    Known issue: inner spacing remains in IE 6.\n   */\n\n  button,\n  html input[type=\"button\"], /* 1 */\n  input[type=\"reset\"],\n  input[type=\"submit\"] {\n    -webkit-appearance: button; /* 2 */\n    cursor: pointer; /* 3 */\n    overflow: visible; /* 4 */\n  }\n\n  /**\n   * Re-set default cursor for disabled elements.\n   */\n\n  button[disabled],\n  html input[disabled] {\n    cursor: default;\n  }\n\n  /**\n   * 1. Address box sizing set to content-box in IE 8/9.\n   * 2. Remove excess padding in IE 8/9.\n   * 3. Remove excess padding in IE 7.\n   *    Known issue: excess padding remains in IE 6.\n   */\n\n  input[type=\"checkbox\"],\n  input[type=\"radio\"] {\n    box-sizing: border-box; /* 1 */\n    padding: 0; /* 2 */\n    height: 13px; /* 3 */\n    width: 13px; /* 3 */\n  }\n\n  /**\n   * 1. Address \\`appearance\\` set to \\`searchfield\\` in Safari 5 and Chrome.\n   * 2. Address \\`box-sizing\\` set to \\`border-box\\` in Safari 5 and Chrome\n   *    (include \\`-moz\\` to future-proof).\n   */\n\n  input[type=\"search\"] {\n    -webkit-appearance: textfield; /* 1 */\n    -moz-box-sizing: content-box;\n    -webkit-box-sizing: content-box; /* 2 */\n    box-sizing: content-box;\n  }\n\n  /**\n   * Remove inner padding and search cancel button in Safari 5 and Chrome\n   * on OS X.\n   */\n\n  input[type=\"search\"]::-webkit-search-cancel-button,\n  input[type=\"search\"]::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  /**\n   * Remove inner padding and border in Firefox 3+.\n   */\n\n  button::-moz-focus-inner,\n  input::-moz-focus-inner {\n    border: 0;\n    padding: 0;\n  }\n\n  /**\n   * 1. Remove default vertical scrollbar in IE 6/7/8/9.\n   * 2. Improve readability and alignment in all browsers.\n   */\n\n  textarea {\n    overflow: auto; /* 1 */\n    vertical-align: top; /* 2 */\n  }\n\n  /**\n   * Remove most spacing between table cells.\n   */\n\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n\n  html,\n  button,\n  input,\n  select,\n  textarea {\n    color: #222;\n  }\n\n\n  ::-moz-selection {\n    background: #b3d4fc;\n    text-shadow: none;\n  }\n\n  ::selection {\n    background: #b3d4fc;\n    text-shadow: none;\n  }\n\n  img {\n    vertical-align: middle;\n  }\n\n  fieldset {\n    border: 0;\n    margin: 0;\n    padding: 0;\n  }\n\n  textarea {\n    resize: vertical;\n  }\n\n  .chromeframe {\n    margin: 0.2em 0;\n    background: #ccc;\n    color: #000;\n    padding: 0.2em 0;\n  }\n\n  :root {\n    font-size: 16px;\n    min-height: 100vh;\n  }\n  \n  body {\n    display: flex;\n    min-height: 100vh;\n  }\n\n  #root {\n    display: flex;\n    width: 100%;\n  }\n`;\n\nexport default GlobalStyles;","import { FC, useCallback, useMemo } from 'react';\nimport { Controller, FieldErrors, FieldNamesMarkedBoolean, FieldValues, get, useForm } from 'react-hook-form';\nimport { ErrorMessage } from '@hookform/error-message';\nimport styled from 'styled-components';\n\nimport Select from './select';\n\nimport GlobalStyles from './global-styles';\n\nconst Wrapper = styled.div`\n  width: 100%;\n\n  margin: 3rem;\n`;\n\ninterface FormData {\n  singleSelect: string;\n  multiSelect: string[];\n}\n\nconst getFillingIsCorrected = (\n  name: string,\n  touched: FieldNamesMarkedBoolean<FieldValues>,\n  errors: FieldErrors,\n): boolean | undefined => (get(touched, name) || get(errors, name) ? !get(errors, name) : undefined);\n\n\nconst App: FC = () => {\n  const { control, handleSubmit, formState } = useForm<FormData>({\n    mode: 'all',\n    criteriaMode: 'all',\n    shouldUnregister: true,\n  });\n\n  const sendData = useCallback((formData: FormData) => {\n    console.log(formData);\n  }, []);\n\n  const optionsForSingle = useMemo(() => Array.from({ length: 400 }, (_, i) => (\n    {\n      value: `test-value-${i + 1}`,\n      label: `test label ${i + 1}`,\n      isDisabled: Math.random() > 0.5,\n    }\n  )), []);\n\n  const optionsForMulti = useMemo(() => Array.from({ length: 3 }, (_, i) => (\n    {\n      value: `test-value-${i + 1}`,\n      label: `test label ${i + 1}`,\n      isDisabled: Math.random() > 0.5,\n    }\n  )), []);\n\n  return (\n    <Wrapper>\n      <form onSubmit={handleSubmit(sendData)}>\n        <textarea cols={30} rows={10} />\n\n        <div>\n          <Controller\n            name=\"singleSelect\"\n            control={control}\n            rules={{\n              required: {\n                value: true,\n                message: 'Required field',\n              },\n            }}\n            render={({ field: { name, value, onChange, onBlur } }) => (\n              <Select\n                name={name}\n                options={optionsForSingle}\n                value={value}\n                onChange={onChange}\n                onBlur={onBlur}\n                placeholder=\"Please, select\"\n                fillingIsCorrected={\n                  getFillingIsCorrected(\n                    'singleSelect',\n                    formState.touchedFields,\n                    formState.errors,\n                  )\n                }\n                isReadOnly={false}\n                isSearchable\n              />\n            )}\n          />\n\n          <ErrorMessage\n            name=\"singleSelect\"\n            errors={formState.errors}\n            render={({ message }) => <div>{message}</div>}\n          />\n        </div>\n\n        <div>\n          <Controller\n            name=\"multiSelect\"\n            control={control}\n            rules={{\n              required: {\n                value: true,\n                message: 'Required field',\n              },\n            }}\n            render={({ field: { name, value, onChange, onBlur } }) => (\n              <Select\n                name={name}\n                mode=\"multi\"\n                options={optionsForMulti}\n                value={value}\n                onChange={onChange}\n                onBlur={onBlur}\n                placeholder=\"Please, select few items\"\n                fillingIsCorrected={\n                  getFillingIsCorrected(\n                    'multiSelect',\n                    formState.touchedFields,\n                    formState.errors,\n                  )\n                }\n                isReadOnly={false}\n                isSearchable\n              />\n            )}\n          />\n\n          <ErrorMessage\n            name=\"multiSelect\"\n            errors={formState.errors}\n            render={({ message }) => <div>{message}</div>}\n          />\n        </div>\n\n        <button type=\"submit\">Submit</button>\n\n      </form>\n\n      <GlobalStyles />\n    </Wrapper>\n  );\n};\n\nexport default App;","import { render } from 'react-dom';\nimport { StrictMode } from 'react';\n\nimport App from './app';\n\nrender(<StrictMode><App /></StrictMode>, document.getElementById('root'));"],"sourceRoot":""}